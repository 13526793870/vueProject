一、基础知识
    指令：
        v-on     v-on:click  或者  @click
        v-bind   属性绑定
        v-html   
        v-model  数据双向绑定
        v-if  v-else   v-if-else
        v-for
    键盘事件：
        keyup   keydown   mouseover
    修饰符:
        once  prevent  left
    特殊特性   ref
    监听  watch  不建议使用watch ，太耗性能
    计算属性 computed  与  方法 method  的区别
    使用计算属性 进行 动态绑定样式 （样式变化频率比较高的， 建议使用计算属性
    初始化多个vue实例对象
    请求Api   fetch  和  axios

二、综合练习（03vuecli-demo)
    ① 组件嵌套           ②组件属性传值                 ③子组件更改父组件的值 ，通过emit注册事件
    ④生命周期、钩子函数   ⑤slot插槽，子组件标签占位      ⑥动态组件和alive缓存

三、配置  （04vue-test）
    1、环境变量
        ① 创建 .env 文件(非开发环境变量)  VUE_APP_**=**
        ② 创建 .env.development(开发环境变量) VUE_APP_**=**
        ③ 创建 .env.production (生产环境)  执行npm run build 后用该文件
    2、独立运行.vue文件
        npm install -g @vue/cli-service-global
        vue serve hello.
        
四、图形化及跨域配置 （05vue-cli-gui）
    ①图形化创建项目   终端窗口执行：vue ui
    ②跨域配置  （vue.config.js）
        module.exports = {
            devServer: {
                open: true,
                host: 'localhost',
                port: 8081,
                https: false,
                hotOnly: false,
                proxy: {
                    //配置跨域
                    '/api': {
                        target: "http://localhost:5000/api/",
                        ws: true,
                        changeOrigin: true,
                        pathRewrite: {
                            '^/api': ''
                        }
                    }
                }
            }
        }



